generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  email        String     @unique
  password     String
  firstName    String
  lastName     String
  profileImage String
  roomUsers    RoomUser[]
  hostedPlaygrounds Playground[]
}

model Playground {
  id        String     @id @default(uuid())
  slug      String     @unique
  status    Status     @default(waiting)
  createdAt DateTime   @default(now())
  hostId    String
  host      User?      @relation(fields: [hostId], references: [id])
  users     RoomUser[]
  settings  Setting[]
}

model RoomUser {
  id           String       @id @default(uuid())
  user         User         @relation(fields: [userId], references: [id])
  userId       String
  playground   Playground   @relation(fields: [playgroundId], references: [id])
  playgroundId String
  status       PlayerStatus @default(active)
  score        Int          @default(0)
  joinedAt     DateTime     @default(now())
  answers      Answer[]
}

model Question {
  id            String   @id @default(uuid())
  text          String
  options       String[] 
  correctOption String
  category      String?
  difficulty    String?
  answer Answer[]
}

model Answer {
  id             String   @id @default(uuid())
  roomUser       RoomUser @relation(fields: [roomUserId], references: [id])
  roomUserId     String
  question       Question @relation(fields: [questionId], references: [id])
  questionId     String
  selectedOption String
  isCorrect      Boolean
  answeredAt     DateTime @default(now())
  questionNo     Int // Which round (like question #1, 2, etc.)
}

model Setting {
  id              String     @id @default(uuid())
  questionLimit   Int        @default(20)
  timePerQuestion Int        @default(45)
  playground      Playground @relation(fields: [playgroundId], references: [id])
  playgroundId    String
}

enum Status {
  waiting
  active
  ended
}

enum PlayerStatus {
  active
  eliminated
  left
  afk
}
